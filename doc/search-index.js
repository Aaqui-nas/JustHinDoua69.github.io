var searchIndex = new Map(JSON.parse('[\
["VectorTools",{"doc":"","t":"FFNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNN","n":["Matrix","Vector","add","add","angle_between","angle_between_degrees","angle_with_axis","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cols","components","dimensions","div","div","dot","fmt","fmt","fmt","from","from","into","into","magnitude","mul","mul","mul","mul","new","new","normalize","orthogonal_proj","project_onto","rows","rows","scalar_proj","sub","to_degrees","to_owned","to_radians","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"VectorTools"],[51,"core::fmt"],[52,"core::fmt"],[53,"alloc::string"],[54,"core::result"],[55,"core::any"]],"d":["A n-dimensional matrix struct with vectors components.","A n-dimensional vector struct with x, y, z and … …","","","Calculates the angle in radians between this vector and …","Calculates the angle in degrees between this vector and …","Calculates the angle in radians between this vector and …","","","","","","","Returns the number of columns in this matrix.","","Calculates the dimensions of this vector.","","","Calculates the dot product of this vector and another …","Displays this matrix as a string.","Displays this vector as a string.","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calculates the magnitude (length) of this vector.","","","","","Creates a new Matrix with the specified vectors components.","Creates a new Vector with the specified x, y, and z …","Normalizes this vector, producing a new vector with the …","Calculates the orthogonal projection of this vector onto …","Projects this vector onto another vector.","Returns the number of rows in this matrix.","","Calculates the scalar projection of this vector onto …","","Converts radians to degrees.","","Converts degrees to radians.","","","","","","","",""],"i":[0,0,1,2,2,2,2,1,2,1,2,2,2,1,2,2,2,2,2,1,2,2,1,2,1,2,2,1,1,2,2,1,2,2,2,2,1,1,2,2,2,2,2,1,2,1,2,1,2,1,2],"f":"``{{bb}b}{{dd}d}{{dd}f}00{ce{}{}}000{dd}{{ce}h{}{}}{bj}`{dj}{{df}d}76{{bl}n}{{dl}n}0{cc{}}088{df}<{{bd}d}<5{{{A`{d}}}b}{{{A`{f}}}d};>>9`=>{ff}=0{cAb{}}0{c{{Ad{e}}}{}{}}000{cAf{}}0","c":[],"p":[[5,"Matrix",0],[5,"Vector",0],[1,"f64"],[1,"unit"],[1,"usize"],[5,"Formatter",51],[8,"Result",51],[5,"Vec",52],[5,"String",53],[6,"Result",54],[5,"TypeId",55]],"b":[[16,"impl-Div%3Cf64%3E-for-Vector"],[17,"impl-Div-for-Vector"],[20,"impl-Display-for-Vector"],[21,"impl-Debug-for-Vector"],[27,"impl-Mul%3C%26Matrix%3E-for-%26Matrix"],[28,"impl-Mul%3C%26Vector%3E-for-%26Matrix"],[29,"impl-Mul-for-Vector"],[30,"impl-Mul%3Cf64%3E-for-Vector"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
